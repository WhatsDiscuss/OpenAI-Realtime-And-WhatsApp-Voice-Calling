name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
        
    - name: Lint with built-in tools
      run: |
        # Check syntax
        python -m py_compile app/*.py
        python -m py_compile app/tests/*.py
        
    - name: Run tests
      run: |
        cd app && python -m pytest tests/ -v
        
    - name: Test import modules
      run: |
        cd app && python -c "
        import config
        import utils
        import medicine_context
        import webrtc_adapter
        import whatsapp_client
        import openai_realtime
        import call_session
        import webhook_handler
        import main
        print('All modules imported successfully')
        "

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t whatsapp-openai-realtime:latest .
        
    - name: Test Docker image
      run: |
        # Create minimal .env file for testing
        echo "WHATSAPP_TOKEN=test_token" > .env
        echo "WHATSAPP_WEBHOOK_SECRET=test_secret" >> .env
        echo "OPENAI_API_KEY=test_key" >> .env
        
        # Test that container starts without errors
        timeout 10s docker run --rm --env-file .env whatsapp-openai-realtime:latest || true
        
    - name: Test health endpoint (with compose)
      run: |
        # Create test environment file
        cp .env.example .env
        sed -i 's/your_whatsapp_token_here/test_token/' .env
        sed -i 's/your_webhook_verify_token_here/test_secret/' .env  
        sed -i 's/sk-your_openai_api_key_here/test_key/' .env
        
        # Start service in background
        docker-compose up -d
        
        # Wait for service to be ready
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8080/health || (docker-compose logs && exit 1)
        
        # Cleanup
        docker-compose down